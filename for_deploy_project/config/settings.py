"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# связывам наш проект с перемеными виртуального окружения , которые лежать в файле .env
env = environ.Env()
environ.Env.read_env(env_file=os.path.join(BASE_DIR, ".env"))


# SECRET_KEY = "django-insecure-it2atvs^1@giws4bho)70f!k3f8svdzk%n64%iob1na9!&7#g9"


# берем значения по ключу SECRET_KEY из файла .env
# также можна брать значения по ключу через os.environ.get("SECRET_KEY")
SECRET_KEY = env("SECRET_KEY")


DEBUG = env("DEBUG")


ALLOWED_HOSTS = ["*"]


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-7r#lre-eq5+(8z@sh9+)za+#sidgzw6(x@6k+c_sp7i%&9p0e^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    # Подлючение к базе данных PostgreSQL
    "default": {
        # указываем движок на котором будер работать подключеная база данных
        # нужно установить pip install psycopg2 (если linux -> pip install psycopg2-binary)
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        # название покдлючаемой базы данных
        "NAME": "my_test",
        # имя пользователя, который будет покдлючаться к базе
        "USER": "postgres",
        # пароль для подключения к базе
        "PASSWORD": "1856",
        # указываем ip-адресс (хост) для нашей базы
        "HOST": "localhost",
        # указываем порт для нашей базы
        "PORT": "5432",
    }
    #
    #
    # Подключение SQLite базы по умолчанию
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# базовый путь к каталогу статики нашего проекта
STATIC_URL = "static/"

# Абсолютный путь к каталогу статики, в котором с помощью python manage.py collectstatic , где
# будут собираться статические файлы.
STATIC_ROOT = os.path.join(BASE_DIR, STATIC_URL)

# нестандарные пути для файлов статики
# STATICFILES_DIRS = [BASE_DIR / "static"]

# базовый путь к каталогу с медиа файлами нашего проекта
MEDIA_URL = "media/"

# Абсолютный путь к каталогу с медиа файлами нашего проекта
MEDIA_ROOT = os.path.join(BASE_DIR, MEDIA_URL)

# Указывам модель, которая будет хранить аккаунты пользователей
# по-умолчанию AUTH_USER_MODEL = "auth.User"
# AUTH_USER_MODEL = "auth.User"
